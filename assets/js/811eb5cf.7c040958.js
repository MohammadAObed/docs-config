"use strict";(self.webpackChunkdocs_config=self.webpackChunkdocs_config||[]).push([[7988],{8453:(e,s,n)=>{n.d(s,{R:()=>t,x:()=>c});var o=n(6540);const i={},r=o.createContext(i);function t(e){const s=o.useContext(r);return o.useMemo(function(){return"function"==typeof e?e(s):{...s,...e}},[s,e])}function c(e){let s;return s=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:t(e.components),o.createElement(r.Provider,{value:s},e.children)}},8761:(e,s,n)=>{n.r(s),n.d(s,{assets:()=>d,contentTitle:()=>c,default:()=>h,frontMatter:()=>t,metadata:()=>o,toc:()=>a});const o=JSON.parse('{"id":"app/tsconfig.base","title":"tsconfig.base","description":"Defined in: tsconfig.base.json","source":"@site/docs/app/tsconfig.base.md","sourceDirName":"app","slug":"/app/tsconfig.base","permalink":"/docs-config/docs/app/tsconfig.base","draft":false,"unlisted":false,"editUrl":"https://github.com/MohammadAObed/docs-config/tree/main/docs/app/tsconfig.base.md","tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"Variable: default","permalink":"/docs-config/docs/app/prettier.config/variables/default"},"next":{"title":"tsup.config","permalink":"/docs-config/docs/app/tsup.config/"}}');var i=n(4848),r=n(8453);const t={},c="tsconfig.base",d={},a=[{value:"Usage",id:"usage",level:2},{value:"Why <code>baseUrl</code> is required",id:"why-baseurl-is-required",level:3},{value:"Why the <code>@/*</code> path alias is recommended",id:"why-the--path-alias-is-recommended",level:3},{value:"Customizing",id:"customizing",level:2}];function l(e){const s={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,r.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(s.header,{children:(0,i.jsx)(s.h1,{id:"tsconfigbase",children:"tsconfig.base"})}),"\n",(0,i.jsxs)(s.p,{children:[(0,i.jsx)(s.strong,{children:"Defined in:"})," ",(0,i.jsx)(s.a,{href:"https://github.com/MohammadAObed/config/blob/main/tsconfig.base.json",children:"tsconfig.base.json"})]}),"\n",(0,i.jsx)(s.p,{children:"A reusable baseline TypeScript config for modern ESM projects and packages. It aligns your editors, bundlers, and CI with the same strict rules used across @mohammad_obed/config."}),"\n",(0,i.jsx)(s.h2,{id:"usage",children:"Usage"}),"\n",(0,i.jsxs)(s.ol,{start:"2",children:["\n",(0,i.jsxs)(s.li,{children:["Create or update your project ",(0,i.jsx)(s.code,{children:"tsconfig.json"}),"."]}),"\n",(0,i.jsx)(s.li,{children:"Extend the base config and set your project-specific roots, aliases, and include globs:"}),"\n"]}),"\n",(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{className:"language-json",children:'{\n  "extends": "@mohammad_obed/config/tsconfig.base",\n  "compilerOptions": {\n    "baseUrl": "src",\n    "paths": {\n      "@/*": ["*"]\n    }\n  },\n  "include": ["src"]\n}\n'})}),"\n",(0,i.jsxs)(s.p,{children:["The base file already excludes ",(0,i.jsx)(s.code,{children:"node_modules"}),", ",(0,i.jsx)(s.code,{children:"dist"}),", and ",(0,i.jsx)(s.code,{children:"docs"}),", so most library and app layouts are covered out of the box."]}),"\n",(0,i.jsxs)(s.h3,{id:"why-baseurl-is-required",children:["Why ",(0,i.jsx)(s.code,{children:"baseUrl"})," is required"]}),"\n",(0,i.jsxs)(s.p,{children:["Setting ",(0,i.jsx)(s.code,{children:'"baseUrl": "src"'})," anchors module resolution to your source folder. Without it, the wildcard path alias would be unresolved. Choose whatever folder sits at the root of your TypeScript sources (",(0,i.jsx)(s.code,{children:'"."'}),", ",(0,i.jsx)(s.code,{children:'"packages/*/src"'}),", etc.)."]}),"\n",(0,i.jsxs)(s.h3,{id:"why-the--path-alias-is-recommended",children:["Why the ",(0,i.jsx)(s.code,{children:"@/*"})," path alias is recommended"]}),"\n",(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{className:"language-json",children:'"paths": {\n  "@/*": ["*"]\n}\n'})}),"\n",(0,i.jsxs)(s.p,{children:["This alias turns imports like ",(0,i.jsx)(s.code,{children:"../../components/Button"})," into ",(0,i.jsx)(s.code,{children:"@/components/Button"}),", keeping imports shallow as your project grows. The wildcard pattern mirrors the folder structure under ",(0,i.jsx)(s.code,{children:"baseUrl"}),", so no extra maintenance is needed when files move around."]}),"\n",(0,i.jsx)(s.h2,{id:"customizing",children:"Customizing"}),"\n",(0,i.jsx)(s.p,{children:"It is common to layer project specifics on top of the base file:"}),"\n",(0,i.jsxs)(s.ul,{children:["\n",(0,i.jsxs)(s.li,{children:["Provide ",(0,i.jsx)(s.code,{children:"paths"}),", ",(0,i.jsx)(s.code,{children:"types"}),", or ",(0,i.jsx)(s.code,{children:"baseUrl"})," to match your module layout."]}),"\n",(0,i.jsxs)(s.li,{children:["Toggle ",(0,i.jsx)(s.code,{children:"noEmit"})," to ",(0,i.jsx)(s.code,{children:"false"})," if you rely on ",(0,i.jsx)(s.code,{children:"tsc"})," to produce ",(0,i.jsx)(s.code,{children:".d.ts"})," files directly."]}),"\n",(0,i.jsxs)(s.li,{children:["For React Native or DOM-less environments, adjust the ",(0,i.jsx)(s.code,{children:"lib"})," array to match the runtime."]}),"\n"]}),"\n",(0,i.jsxs)(s.p,{children:["Because the config is exported at ",(0,i.jsx)(s.code,{children:"@mohammad_obed/config/tsconfig.base.json"}),", every consumer stays on the same defaults while still being able to override only what is necessary."]})]})}function h(e={}){const{wrapper:s}={...(0,r.R)(),...e.components};return s?(0,i.jsx)(s,{...e,children:(0,i.jsx)(l,{...e})}):l(e)}}}]);